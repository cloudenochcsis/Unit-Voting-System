apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: military-voting
spec:
  selector:
    matchLabels:
      app: db
  replicas: 1
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: postgres
        image: postgres:13-alpine
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "128Mi"   # Higher memory for database
            cpu: "100m"       # 0.1 CPU cores
          limits:
            memory: "256Mi"   # Database needs more memory
            cpu: "200m"       # 0.2 CPU cores
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: postgres-password
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_DB
          value: votingdb
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
        readinessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
              - pg_isready
              - -U
              - postgres
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: military-voting
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
  namespace: military-voting
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi  # Small storage for Free Tier (30GB total limit)
